name: 🐍 File Reader Assignment Tests

on: 
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  quality-check:
    name: 🧪 Test & Quality Assurance
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v3
    
    - name: 🐍 Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: 🚀 Install Project Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        echo "✅ Dependencies installed successfully"
    
    - name: 🔍 Run Unit Tests
      run: |
        echo "🧪 Starting test suite execution..."
        pytest test_file_reader.py -v --tb=short
        echo "✅ All tests completed"
    
    - name: 🎨 Code Formatting Check
      run: |
        echo "🎨 Checking code formatting..."
        black --check --diff test_file_reader.py file_reader.py
        echo "✅ Code formatting verified"
    
    - name: 📊 Generate Test Report
      if: always()
      run: |
        echo "📊 Test execution summary:"
        echo "- Python Version: ${{ matrix.python-version }}"
        echo "- Repository: ${{ github.repository }}"
        echo "- Branch: ${{ github.ref_name }}"
        echo "- Commit: ${{ github.sha }}"

  assignment-validation:
    name: 🎓 Assignment Requirements Check
    runs-on: ubuntu-latest
    needs: quality-check
    
    steps:
    - name: 📥 Get Code
      uses: actions/checkout@v3
    
    - name: 🔧 Python Setup
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: 📦 Install Requirements
      run: pip install -r requirements.txt
    
    - name: ✅ Validate Assignment Features
      run: |
        echo "🎓 Checking university assignment requirements..."
        python3 -c "
        from file_reader import FileReader, AdvancedFileReader, color_decorator
        print('✅ Custom classes imported successfully')
        
        # Test generators
        reader = FileReader()
        print('✅ Generator functionality available')
        
        # Test decorators
        @color_decorator('green')
        def test(): return 'decorated'
        print('✅ Custom decorator working')
        
        print('🎉 All assignment requirements validated!')
        " 
